name: release
run-name: 'release: ${{ inputs.release-type }} ${{ inputs.pre-identifier }} dry-run: ${{ inputs.dry-run }}'

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release Type'
        required: true
        default: 'prerelease'
        type: choice
        options:
          - major
          - minor
          - patch
          - premajor
          - preminor
          - prepatch
          - prerelease
      pre-identifier:
        description: 'Pre-release identifier'
        required: false
        default: 'alpha'
        type: string
      dry-run:
        description: 'Dry run the release'
        required: true
        default: true
        type: boolean

jobs:
  preflight-checks:
    uses: ./.github/workflows/ci.yml

  prepare:
    needs: [preflight-checks]
    name: prepare
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            node_modules
            package/node_modules
          key: dependencies-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            dependencies-${{ hashFiles('yarn.lock') }}

      - uses: actions/setup-node@v3
        with:
          node-version: 14.17.0

      - run: echo "version=$(node prepare-version.js ${{ inputs.release-type }} ${{ inputs.pre-identifier }})" >> $GITHUB_OUTPUT
        id: version

      - run: |
          git config --global user.name 'Alexandru Ifrim'
          git config --global user.email 'aifrim@users.noreply.github.com'

          git add package/package.json
          git commit -m "chore(release): v${{ steps.version.outputs.version }}"
          git push
        if: ${{ !inputs.dry-run }}

  publish-npm:
    needs: [prepare]
    name: publish to npm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            node_modules
            package/node_modules
          key: dependencies-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            dependencies-${{ hashFiles('yarn.lock') }}

      - uses: actions/cache@v3
        with:
          path: |
            package/dist
          key: build-${{ hashFiles('yarn.lock') }}-${{ github.workflow }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            build-${{ hashFiles('yarn.lock') }}-${{ github.workflow }}-${{ github.ref }}-${{ github.sha }}

      - run: cp README.md package/README.md

      - uses: actions/setup-node@v3
        with:
          node-version: 14.17.0
          registry-url: https://registry.npmjs.org/

      - run: node prepare-version.js ${{ inputs.release-type }} ${{ inputs.pre-identifier }}

      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_PUBLISH }}
          registry: https://registry.npmjs.org/
          package: ./package/package.json
          access: public
          check-version: true
          dry-run: ${{ inputs.dry-run }}

  publish-github:
    needs: [prepare]
    name: publish to github packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            node_modules
            package/node_modules
          key: dependencies-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            dependencies-${{ hashFiles('yarn.lock') }}

      - uses: actions/cache@v3
        with:
          path: |
            package/dist
          key: build-${{ hashFiles('yarn.lock') }}-${{ github.workflow }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            build-${{ hashFiles('yarn.lock') }}-${{ github.workflow }}-${{ github.ref }}-${{ github.sha }}

      - run: cp README.md package/README.md

      - uses: actions/setup-node@v3
        with:
          node-version: 14.17.0
          registry-url: https://npm.pkg.github.com

      - run: node prepare-github-packages.js @aifrim/react-smartkeys

      - run: node prepare-version.js ${{ inputs.release-type }} ${{ inputs.pre-identifier }}

      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.GH_PUBLISH }}
          registry: https://npm.pkg.github.com
          package: ./package/package.json
          access: public
          check-version: true
          dry-run: ${{ inputs.dry-run }}

  release:
    needs: [prepare, publish-npm, publish-github]
    name: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            node_modules
            package/node_modules
          key: dependencies-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            dependencies-${{ hashFiles('yarn.lock') }}

      - uses: actions/cache@v3
        with:
          path: |
            package/dist
          key: build-${{ hashFiles('yarn.lock') }}-${{ github.workflow }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            build-${{ hashFiles('yarn.lock') }}-${{ github.workflow }}-${{ github.ref }}-${{ github.sha }}

      - run: node prepare-version.js ${{ inputs.release-type }} ${{ inputs.pre-identifier }}

      - run: npm pack --workspace package

      - run: gh release create v${{ needs.prepare.outputs.version }} --generate-notes
        if: ${{ !inputs.dry-run }}
        env:
          GH_TOKEN: ${{ github.token }}

      - run: gh release upload v${{ needs.prepare.outputs.version }} 'react-smartkeys-${{ needs.prepare.outputs.version }}.tgz#react-smartkeys@${{ needs.prepare.outputs.version }} (tar)'
        if: ${{ !inputs.dry-run }}
        env:
          GH_TOKEN: ${{ github.token }}
